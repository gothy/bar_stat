// Generated by CoffeeScript 1.3.1
(function() {
  var barstat, buster, redis, request, utils;

  buster = require("buster");

  request = require('request');

  redis = require('redis');

  utils = require('../utils');

  barstat = require('../barstat');

  buster.testCase('test api', {
    setUp: function(done) {
      var db,
        _this = this;
      this.db = db = utils.get_db_client();
      return db.select(10, function() {
        return db.flushdb(function(err, reply) {
          console.log('cleaning up test DB ');
          _this.spy(utils, 'get_db_client');
          _this.spy(utils, 'get_ts_and_day_ts');
          _this.spy(utils, 'get_browser_name');
          if (!barstat.RUNNING) {
            barstat.launch();
          }
          return done();
        });
      });
    },
    'test new session': function(done) {
      return request('http://localhost:1337/bar_stat/session/test/testid/', function(err, res, body) {
        assert.calledOnce(utils.get_db_client);
        assert.calledOnce(utils.get_ts_and_day_ts);
        assert.calledOnce(utils.get_browser_name);
        assert.same(res.statusCode, 200);
        assert.same(body, 'ok');
        return done();
      });
    },
    'test panel': function(done) {
      return request('http://localhost:1337/bar_stat/panel/test/', function(err, res, body) {
        refute.called(utils.get_db_client);
        refute.called(utils.get_ts_and_day_ts);
        assert.match(body, 'needs_auth = true');
        return done();
      });
    },
    'test login without pwd': function(done) {
      return request('http://localhost:1337/bar_stat/api/login/test/', function(err, res, body) {
        refute.called(utils.get_db_client);
        refute.called(utils.get_ts_and_day_ts);
        assert.same(res.statusCode, 400);
        assert.same(body, 'nosecret');
        return done();
      });
    },
    'test login with wrong user': function(done) {
      return request('http://localhost:1337/bar_stat/api/login/test/?secret=f1234', function(err, res, body) {
        assert.calledOnce(utils.get_db_client);
        refute.called(utils.get_ts_and_day_ts);
        assert.same(res.statusCode, 400);
        assert.same(body, 'nouser');
        return done();
      });
    },
    'test login with wrong pwd': function(done) {
      this.db.hset('partner.creds.test', 'hsecret', "$2a$10$bNgCrGwIGGCaffxAQ1Hku.frwE819shB4ATbpKr1Vp5C1Gdo3EM8y");
      return request('http://localhost:1337/bar_stat/api/login/test/?secret=f1234', function(err, res, body) {
        assert.calledOnce(utils.get_db_client);
        refute.called(utils.get_ts_and_day_ts);
        assert.same(res.statusCode, 401);
        assert.same(body, 'badsecret');
        return done();
      });
    }
  });

}).call(this);
